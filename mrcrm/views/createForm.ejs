<!DOCTYPE html>
<html>

<head>
  <%- include('./header.ejs') %>
    <title>Create new form</title>
</head>

<body>
  <%- include('./navbar.ejs') %>
    <div id="main">
      <div class="container">
        <h1 class="title">Preview</h1>
      </div>
      <div class="container">
        <h1 class="title">Construct form</h1>
      </div>
      <div class="container" id="addfield">
        <h1 class="title">Add field</h1>
        <div id="fields">

        </div>
        <input id="newField" type="text"><button onclick="addField(event)">Add Field</button>
      </div>
    </div>
    <script src="/javascripts/base.js"></script>
    <script>
      function deleteField(e) {
        const sender = e.srcElement || e.target;
        const id = sender.parentNode.id;
        getAjax("/report/delete/fields/" + id, (r) => {
          //sender.parentNode.parentNode.removeChild(sender.parentNode)
          refreshAddFieldContainer()
        });
      }
      function updateField(e) {
        const sender = e.srcElement || e.target;
        const id = sender.parentNode.id;
        const text = sender.parentNode.getElementsByTagName("input")[0]
        getAjax("/report/update/fields/" + id + "?field=" + text.value, (r) => {refreshAddFieldContainer() });
      }
      function addField(event) {
        let input = document.getElementById("newField");
        const text = input.value;
        getAjax("/report/add/fields?field=" + text, (r) => {
          /*const json = JSON.parse(r);
          document.getElementById("fields").appendChild(createField(json.id, text)); */
          refreshAddFieldContainer()
          input.value = "";
        })
      }

      const createField = (id, value) => {
        let field = document.createElement("div")
        field.classList.add("field");
        field.id = id;
        let input = document.createElement("input")
        input.value = value;
        let editBtn = document.createElement("button")
        editBtn.innerText = "Edit";
        editBtn.addEventListener("click", updateField);
        let deleteBtn = document.createElement("button")
        deleteBtn.addEventListener("click", deleteField);
        deleteBtn.innerText = "X";
        field.appendChild(input);
        field.appendChild(editBtn);
        field.appendChild(deleteBtn);
        return field;
      }
      const getListOfFields = () => new Promise((rs, rj) => {
        getAjax("/report/get/fields", (res) => { rs(res) })
      })
      let listOfFields = []

      function refreshAddFieldContainer() {
        let c = document.getElementById("fields")
        while (c.firstChild) {
          c.removeChild(c.firstChild);
        }

        getListOfFields().then((list) => {
          listOfFields = JSON.parse(list).fields;
          listOfFields.forEach((field) => {
            c.appendChild(createField(field.id, field.field))
          });
        })
      }

      const prev = window.onload;
      window.onload = () => {
        if (prev) prev();
        refreshAddFieldContainer();
      } 
    </script>
</body>

</html>